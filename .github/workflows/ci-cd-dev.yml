name: CI CD dev

on:
  push:
    branches: ['dev']

jobs:
  runner-job:
    runs-on: ubuntu-latest

    services:

      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: test-base
          MYSQL_USER: test-user
          MYSQL_PASSWORD: test-password
          MYSQL_ROOT_PASSWORD: root-password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Tests
        run: npm test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          MYSQL_HOST: localhost
          MYSQL_PORT: 3306

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies and build ðŸ”§
        run: npm ci && npm run build

      - name: Make Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
